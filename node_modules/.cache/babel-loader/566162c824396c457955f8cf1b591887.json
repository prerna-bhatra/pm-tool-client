{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js\",\n    _templateObject;\n\nimport React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nvar ProjectList = function ProjectList() {\n  var _data$getAllProjects;\n\n  var _useQuery = useQuery(GET_ALL_PROJECTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data; //   const [projects, setProjects] = useState([]);\n\n\n  console.log(\"loading\", loading, \"errrr\", error, \"data\", data);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Error :\");\n\n  if (data) {// setProjects([...data.getAllProjects])\n  }\n\n  console.log(\"projects\", projects);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Project List\"), data === null || data === void 0 ? void 0 : (_data$getAllProjects = data.getAllProjects) === null || _data$getAllProjects === void 0 ? void 0 : _data$getAllProjects.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Project Name: \", item.name, \" \")));\n  }));\n};\n\nvar GET_ALL_PROJECTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getAllProjects {\\n    getAllProjects {\\n      id\\n      name\\n      users {\\n        id\\n        name\\n        email\\n      }\\n      tasks {\\n        id\\n        name\\n        assignee {\\n          id\\n          email\\n          name\\n        }\\n        assigneedBy {\\n          id\\n          name\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport default ProjectList;","map":{"version":3,"names":["React","useState","useQuery","gql","ProjectList","GET_ALL_PROJECTS","loading","error","data","console","log","projects","getAllProjects","map","item","i","name"],"sources":["/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst ProjectList = () => {\n  const { loading, error, data } = useQuery(GET_ALL_PROJECTS);\n\n  //   const [projects, setProjects] = useState([]);\n\n  console.log(\"loading\", loading, \"errrr\", error, \"data\", data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :</p>;\n\n  if (data) {\n    // setProjects([...data.getAllProjects])\n  }\n\n  console.log(\"projects\", projects);\n\n  return (\n    <div>\n      <h3>Project List</h3>\n      {data?.getAllProjects?.map((item, i) => (\n        <ul>\n          <li>\n            <p>Project Name: {item.name} </p>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nconst GET_ALL_PROJECTS = gql`\n  query getAllProjects {\n    getAllProjects {\n      id\n      name\n      users {\n        id\n        name\n        email\n      }\n      tasks {\n        id\n        name\n        assignee {\n          id\n          email\n          name\n        }\n        assigneedBy {\n          id\n          name\n          email\n        }\n      }\n    }\n  }\n`;\n\nexport default ProjectList;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EAAA;;EACxB,gBAAiCF,QAAQ,CAACG,gBAAD,CAAzC;EAAA,IAAQC,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB,CADwB,CAGxB;;;EAEAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB,EAAgC,OAAhC,EAAyCC,KAAzC,EAAgD,MAAhD,EAAwDC,IAAxD;EAEA,IAAIF,OAAJ,EAAa,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAP;;EAEX,IAAIC,IAAJ,EAAU,CACR;EACD;;EAEDC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,EAEGH,IAFH,aAEGA,IAFH,+CAEGA,IAAI,CAAEI,cAFT,yDAEG,qBAAsBC,GAAtB,CAA0B,UAACC,IAAD,EAAOC,CAAP;IAAA,oBACzB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,qBAAkBD,IAAI,CAACE,IAAvB,MADF,CADF,CADyB;EAAA,CAA1B,CAFH,CADF;AAYD,CA5BD;;AA8BA,IAAMX,gBAAgB,GAAGF,GAAH,2aAAtB;AA4BA,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}