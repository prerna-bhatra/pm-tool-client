{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js\";\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { GET_ALL_PROJECTS } from \"../../graphql/graphqlQuery\";\n\nvar ProjectList = function ProjectList() {\n  var navigate = useNavigate();\n\n  var _useQuery = useQuery(GET_ALL_PROJECTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(\"loading\", loading, \"errrr\", error, \"data\", data);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Error :\");\n\n  if (data) {}\n\n  var goToProject = function goToProject(projectId) {\n    console.log(\"projectId\", projectId);\n    navigate(\"/project\", {\n      state: {\n        id: projectId\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-list-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Project List\"), /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Name \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Lead\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Category\")), data && data.getAllProjects.length > 0 && data.getAllProjects.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      onClick: function onClick() {\n        return goToProject(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"project-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, item.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"-\")) // <li </li>\n    ;\n  })));\n};\n\nexport default ProjectList;","map":{"version":3,"names":["React","useState","useNavigate","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useQuery","gql","GET_ALL_PROJECTS","ProjectList","navigate","loading","error","data","console","log","goToProject","projectId","state","id","getAllProjects","length","map","item","i","name"],"sources":["/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { useQuery, gql } from \"@apollo/client\";\nimport { GET_ALL_PROJECTS } from \"../../graphql/graphqlQuery\";\n\nconst ProjectList = () => {\n    const navigate = useNavigate();\n  const { loading, error, data } = useQuery(GET_ALL_PROJECTS);\n\n  console.log(\"loading\", loading, \"errrr\", error, \"data\", data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :</p>;\n\n  if (data) {\n  }\n\n  const goToProject = (projectId) => {\n    console.log(\"projectId\", projectId);\n    navigate(\"/project\",{\n        state:{\n            id:projectId\n        }\n    });\n    \n  };\n\n  return (\n    <div className=\"project-list-body\">\n      <h3>Project List</h3>\n      <Table>\n        <TableHead>\n          <TableCell>Name </TableCell>\n          <TableCell>Lead</TableCell>\n          <TableCell>Category</TableCell>\n        </TableHead>\n\n        {data &&\n          data.getAllProjects.length > 0 &&\n          data.getAllProjects.map((item, i) => (\n            <TableRow onClick={() => goToProject(item.id)}>\n              <TableCell className=\"project-name\">{item.name}</TableCell>\n              <TableCell>-</TableCell>\n              <TableCell>-</TableCell>\n            </TableRow>\n            // <li </li>\n          ))}\n      </Table>\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACtB,IAAMC,QAAQ,GAAGX,WAAW,EAA5B;;EACF,gBAAiCO,QAAQ,CAACE,gBAAD,CAAzC;EAAA,IAAQG,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB;;EAEAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB,EAAgC,OAAhC,EAAyCC,KAAzC,EAAgD,MAAhD,EAAwDC,IAAxD;EAEA,IAAIF,OAAJ,EAAa,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAP;;EAEX,IAAIC,IAAJ,EAAU,CACT;;EAED,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;IACjCH,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,SAAzB;IACAP,QAAQ,CAAC,UAAD,EAAY;MAChBQ,KAAK,EAAC;QACFC,EAAE,EAACF;MADD;IADU,CAAZ,CAAR;EAMD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,mBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,eAEE,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADF,eAEE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAFF,eAGE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAHF,CADF,EAOGJ,IAAI,IACHA,IAAI,CAACO,cAAL,CAAoBC,MAApB,GAA6B,CAD9B,IAECR,IAAI,CAACO,cAAL,CAAoBE,GAApB,CAAwB,UAACC,IAAD,EAAOC,CAAP;IAAA,oBACtB,oBAAC,QAAD;MAAU,OAAO,EAAE;QAAA,OAAMR,WAAW,CAACO,IAAI,CAACJ,EAAN,CAAjB;MAAA,CAAnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,SAAD;MAAW,SAAS,EAAC,cAArB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAqCI,IAAI,CAACE,IAA1C,CADF,eAEE,oBAAC,SAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OAFF,eAGE,oBAAC,SAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OAHF,CADsB,CAMtB;IANsB;EAAA,CAAxB,CATJ,CAFF,CADF;AAuBD,CA7CD;;AA+CA,eAAehB,WAAf"},"metadata":{},"sourceType":"module"}