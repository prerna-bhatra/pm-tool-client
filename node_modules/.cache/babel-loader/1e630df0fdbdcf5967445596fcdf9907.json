{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js\",\n    _templateObject;\n\nimport React, { useState } from \"react\";\nimport { useQuery, gql } from '@apollo/client';\n\nvar ProjectList = function ProjectList() {\n  var _useQuery = useQuery(GET_ALL_PROJECTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data; //   const [projects, setProjects] = useState([]);\n\n\n  console.log(\"loading\", loading, \"errrr\", error, \"data\", data);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Error :\");\n\n  if (data) {// setProjects([...data.getAllProjects])\n  } //   console.log(\"projects\",projects);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Project List\"), data && data.getAllProjects.length > 0 && data.getAllProjects.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Project Name : \", item.name));\n  }));\n};\n\nvar GET_ALL_PROJECTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getAllProjects {\\n    getAllProjects {\\n        id\\n        name\\n        users {\\n          id\\n          name\\n          email\\n        }\\n        tasks {\\n          id\\n          name\\n          assignee {\\n            id\\n            email\\n            name\\n          }\\n          assigneedBy {\\n            id\\n            name\\n            email\\n          }\\n        }\\n      }\\n  }\\n\"])));\nexport default ProjectList;","map":{"version":3,"names":["React","useState","useQuery","gql","ProjectList","GET_ALL_PROJECTS","loading","error","data","console","log","getAllProjects","length","map","item","i","name"],"sources":["/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/projectList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql } from '@apollo/client';\n\n\nconst ProjectList = () => {\n    const { loading, error, data } = useQuery(GET_ALL_PROJECTS);\n    \n//   const [projects, setProjects] = useState([]);\n\n\n  console.log(\"loading\",loading,\"errrr\",error,\"data\",data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :</p>;\n\n  if(data){\n    // setProjects([...data.getAllProjects])\n  }\n\n//   console.log(\"projects\",projects);\n\n  return (\n    <div>\n      <h3>Project List</h3>\n      {\n        data && data.getAllProjects.length > 0 &&\n        data.getAllProjects.map((item ,i)=>(\n            <ul>\n                <li>Project Name : {item.name}</li>\n            </ul>\n        ))\n      }\n    </div>\n  );\n};\n\nconst GET_ALL_PROJECTS = gql`\n  query getAllProjects {\n    getAllProjects {\n        id\n        name\n        users {\n          id\n          name\n          email\n        }\n        tasks {\n          id\n          name\n          assignee {\n            id\n            email\n            name\n          }\n          assigneedBy {\n            id\n            name\n            email\n          }\n        }\n      }\n  }\n`;\n\nexport default ProjectList;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACtB,gBAAiCF,QAAQ,CAACG,gBAAD,CAAzC;EAAA,IAAQC,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB,CADsB,CAG1B;;;EAGEC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBJ,OAAtB,EAA8B,OAA9B,EAAsCC,KAAtC,EAA4C,MAA5C,EAAmDC,IAAnD;EAEA,IAAIF,OAAJ,EAAa,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAP;;EAEX,IAAGC,IAAH,EAAQ,CACN;EACD,CAbuB,CAe1B;;;EAEE,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,EAGIA,IAAI,IAAIA,IAAI,CAACG,cAAL,CAAoBC,MAApB,GAA6B,CAArC,IACAJ,IAAI,CAACG,cAAL,CAAoBE,GAApB,CAAwB,UAACC,IAAD,EAAOC,CAAP;IAAA,oBACpB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,sBAAoBD,IAAI,CAACE,IAAzB,CADJ,CADoB;EAAA,CAAxB,CAJJ,CADF;AAaD,CA9BD;;AAgCA,IAAMX,gBAAgB,GAAGF,GAAH,udAAtB;AA4BA,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}