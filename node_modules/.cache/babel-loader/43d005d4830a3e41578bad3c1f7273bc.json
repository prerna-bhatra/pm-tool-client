{"ast":null,"code":"import _slicedToArray from \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/project.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { GET_PROJECT_BY_ID } from \"../../graphql/graphqlQuery\";\n\nvar Project = function Project() {\n  var location = useLocation(); // console.log({ prerna: location.state.id });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasksArray = _useState2[0],\n      setTasksArray = _useState2[1];\n\n  var _useQuery = useQuery(GET_PROJECT_BY_ID, {\n    variables: {\n      id: location.state.id\n    },\n    onCompleted: function onCompleted() {\n      var tempTasks = data.getProjectById.tasks;\n      var todoArr = [];\n      var inProgressArr = [];\n      var doneArr = [];\n      tempTasks.map(function (element, index) {\n        // console.log(\"element\",element , element.status);\n        if (element.status === \"to-do\") {\n          console.log(\"TODODDDD\", element);\n          todoArr.push(element);\n        }\n\n        if (element.status === \"in-progress\") {\n          console.log(\"IN PROGRESSSS\", element);\n          todoArr.push(element);\n        }\n\n        if (element.status === \"done\") todoArr.push(element);\n      });\n      var tempArr = [todoArr, inProgressArr, doneArr];\n      setTasksArray([].concat(tempArr));\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  console.log(\"tasksArray\", tasksArray);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, data && data.getProjectById && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, data.getProjectById.name), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, [0, 1, 2].map(function (value) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: value,\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\n\nexport default Project;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useQuery","Grid","Paper","GET_PROJECT_BY_ID","Project","location","tasksArray","setTasksArray","variables","id","state","onCompleted","tempTasks","data","getProjectById","tasks","todoArr","inProgressArr","doneArr","map","element","index","status","console","log","push","tempArr","loading","error","name","value"],"sources":["/Users/hb-2547/prerna/assignement/pm-tool/client-using-saga/src/containers/project/project.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { GET_PROJECT_BY_ID } from \"../../graphql/graphqlQuery\";\n\nconst Project = () => {\n  const location = useLocation();\n  // console.log({ prerna: location.state.id });\n\n  const [tasksArray, setTasksArray] = useState([]);\n\n  const { loading, error, data } = useQuery(GET_PROJECT_BY_ID, {\n    variables: { id: location.state.id },\n    onCompleted: () => {\n      const tempTasks = data.getProjectById.tasks;\n      const todoArr = [];\n      const inProgressArr = [];\n      const doneArr = [];\n      tempTasks.map((element, index) => {\n        // console.log(\"element\",element , element.status);\n        if (element.status === \"to-do\"){\n          console.log(\"TODODDDD\" , element);\n          todoArr.push(element);\n        } \n        if (element.status === \"in-progress\") \n        {\n          console.log(\"IN PROGRESSSS\",element);\n          todoArr.push(element);\n\n        }\n        if (element.status === \"done\") todoArr.push(element);\n      });\n      const tempArr = [todoArr, inProgressArr, doneArr];\n      setTasksArray([...tempArr]);\n    },\n  });\n\n  console.log(\"tasksArray\", tasksArray);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>error</p>;\n\n  return (\n    <div className=\"project-body\">\n      {data && data.getProjectById && (\n        <>\n          <h3 className=\"text-left\">{data.getProjectById.name}</h3>\n          <Grid item xs={12}>\n            <Grid container justifyContent=\"center\" spacing={2}>\n              {[0, 1, 2].map((value) => (\n                <Grid key={value} item>\n                  {/* {value === 0 ? <div>0</div> : null}\n                  {value === 1 ? <div>1</div> : null}\n                  {value === 2 ? <div>2</div> : null} */}\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Project;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}